name: node-deploy-google-cloud-function
on:
  workflow_call:
    inputs:
      functionName:
        required: true
        type: string
      sourceDirectory:
        required: true
        type: string
      runtime:
        required: false
        type: string
        default: nodejs14
    secrets:
      gcpCredentialsTest:
        required: true
      gcpCredentialsStage:
        required: true
      gcpCredentialsProd:
        required: true
      projectIdTest:
        required: true
      projectIdStage:
        required: true
      projectIdProd:
        required: true
      envVarsTest:
        required: true
      envVarsStage:
        required: true
      envVarsProd:
        required: true
jobs:
  foo:
    steps:
      - name: "echo github.head_ref"
        run: echo "${{ github.head_ref }}"
      - name: "echo github.ref_name"
        run: echo "${{ github.ref_name }}"
      - name: "echo github.event.ref"
        run: echo "${{ github.event.ref }}"  
  test:
    if: ${{ github.head_ref || github.ref_name }} == 'main' || ${{ github.event.ref == 'GoLiveTest' }}
    env:
      FUNCTION_NAME: ${{ inputs.functionName }}
      GCP_CREDENTIALS: ${{ secrets.gcpCredentialsTest }}
      RUNTIME: ${{ inputs.runtime }}
      SOURCE_DIR: ${{ inputs.sourceDirectory }}
      ENV_VARS: GCLOUD_PROJECT=${{ secrets.projectIdTest }},${{ secrets.envVarsTest }}
    runs-on: ubuntu-latest
    steps:
      - name: checkout source
        uses: actions/checkout@v2
      - id: 'auth'
        uses: 'google-github-actions/auth@v0'
        with:
          credentials_json: '${{ env.GCP_CREDENTIALS }}'
      - name: 'Set up Cloud SDK'
        uses: 'google-github-actions/setup-gcloud@v0'
      - name: deploy function
        run: 'gcloud functions deploy ${{ env.FUNCTION_NAME }} --runtime=${{ env.RUNTIME }} --trigger-http --source=${{ env.SOURCE_DIR }} --set-env-vars=${{ env.ENV_VARS }} --quiet'
  stage:
    if: ${{ github.head_ref || github.ref_name }} == 'stage'
    env:
      FUNCTION_NAME: ${{ inputs.functionName }}
      GCP_CREDENTIALS: ${{ secrets.gcpCredentialsStage }}
      RUNTIME: ${{ inputs.runtime }}
      SOURCE_DIR: ${{ inputs.sourceDirectory }}
      ENV_VARS: GCLOUD_PROJECT=${{ secrets.projectIdStage }},${{ secrets.envVarsStage }}
    runs-on: ubuntu-latest
    steps:
      - name: checkout source
        uses: actions/checkout@v2
      - id: 'auth'
        uses: 'google-github-actions/auth@v0'
        with:
          credentials_json: '${{ env.GCP_CREDENTIALS }}'
      - name: 'Set up Cloud SDK'
        uses: 'google-github-actions/setup-gcloud@v0'
      - name: deploy function
        run: 'gcloud functions deploy ${{ env.FUNCTION_NAME }} --runtime=${{ env.RUNTIME }} --trigger-http --source=${{ env.SOURCE_DIR }} --set-env-vars=${{ env.ENV_VARS }} --quiet'
  prod:
    if: ${{ github.head_ref || github.ref_name }} == 'prod'
    env:
      FUNCTION_NAME: ${{ inputs.functionName }}
      GCP_CREDENTIALS: ${{ secrets.gcpCredentialsProd }}
      RUNTIME: ${{ inputs.runtime }}
      SOURCE_DIR: ${{ inputs.sourceDirectory }}
      ENV_VARS: GCLOUD_PROJECT=${{ secrets.projectIdProd }},${{ secrets.envVarsProd }}
    runs-on: ubuntu-latest
    steps:
      - name: checkout source
        uses: actions/checkout@v2
      - id: 'auth'
        uses: 'google-github-actions/auth@v0'
        with:
          credentials_json: '${{ env.GCP_CREDENTIALS }}'
      - name: 'Set up Cloud SDK'
        uses: 'google-github-actions/setup-gcloud@v0'
      - name: deploy function
        run: 'gcloud functions deploy ${{ env.FUNCTION_NAME }} --runtime=${{ env.RUNTIME }} --trigger-http --source=${{ env.SOURCE_DIR }} --set-env-vars=${{ env.ENV_VARS }} --quiet'
